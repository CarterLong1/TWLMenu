name: Build TWiLight Menu++

on: [push, pull_request, release]

jobs:
  build:
    runs-on: ubuntu-latest
    container: devkitpro/devkitarm:20200528
    name: "Build with Docker using devKitARM r54"
    outputs:
      commit_tag: ${{ steps.make-cias.outputs.commit_tag }}
      commit_message: ${{ steps.make-cias.outputs.commit_message }}
    steps:
      - uses: actions/checkout@v2
      - name: "test"
        run: |
          mkdir -p ${{ github.workspace }}/artifacts
          touch ${{ github.workspace }}/artifacts/test.txt
      - name: "Publish build to GH Actions"
        uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}/artifacts/*
      - name: "Install tools"
        run: |
          sudo apt-get update
          sudo apt-get install p7zip-full python jq -y
      - name: "Build TWiLightMenu++"
        run: |
          make package
      - name: "Make booter and TWiLightMenu CIAs"
        id: make-cias
        run: |
          cd booter/
          chmod +x make_cia
          ./make_cia --srl="booter.nds" --id_0=$(git rev-parse --short=7 HEAD) --tikID=$(git rev-parse --short=16 HEAD)
          mkdir -p "../7zfile/3DS - CFW users/"
          cp "booter.cia" "../7zfile/3DS - CFW users/TWiLight Menu.cia"

          cd ../rungame/
          chmod +x make_cia
          ./make_cia --srl="rungame.nds" --id_0=$(git rev-parse --short=7 HEAD) --tikID=$(git rev-parse --short=16 HEAD)
          cp "rungame.cia" "../7zfile/3DS - CFW users/TWiLight Menu - Game booter.cia"

          echo "::set-output name=commit_tag::$(git log --format=%h -1)"
          echo "::set-output name=commit_message::$(git log --pretty=format:'%an - %s' -1)"
      - name: "Make WoodR4 _DS_MENU.DAT files"
        run: |
          cd booter_fc/r4_menu_dat/
          cp "../booter_fc.nds" "_DS_MENU.nds"
          ./dlditool r4_sd.dldi _DS_MENU.nds

          ./r4enc _DS_MENU.nds
          mv "_DS_MENU.nds.DAT" "../../7zfile/Flashcard users/Autoboot/akMenu-Wood UI root/_DS_MENU.DAT"
      - name: "Pack 7z Package for nightly"
        if: ${{ false && !startsWith(github.ref, 'v') }}
        run: |
          rm -r 7zfile/_nds/TWiLightMenu/*menu/

          mv 7zfile/ TWiLightMenu/
          7z a TWiLightMenu.7z TWiLightMenu/
          rm -r TWiLightMenu/_nds/TWiLightMenu/apfix/
          rm -r TWiLightMenu/3DS\ -\ CFW\ users/_nds/TWiLightMenu/widescreen/
          7z a TWiLightMenu-Lite.7z TWiLightMenu/
          mkdir -p ${{ github.workspace }}/artifacts
          cp TWiLightMenu.7z ${{ github.workspace }}/artifacts
          cp TWiLightMenu-Lite.7z ${{ github.workspace }}/artifacts
      - name: "Pack 7z Package for release"
        if: ${{ true || startsWith(github.ref, 'v') }}
        run: |
          mkdir 7zfile/_nds/TWiLightMenu/boxart/
          mkdir 7zfile/_nds/TWiLightMenu/gamesettings/

          # nds-bootstrap
          mkdir nds-bootstrap
          cd nds-bootstrap
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/ahezard/nds-bootstrap/releases/latest -o nds-bootstrap.json
          curl -L $(jq --raw-output '.assets[0].browser_download_url' nds-bootstrap.json) -o nds-bootstrap.7z
          7z x nds-bootstrap.7z
          mv nds-bootstrap.* ..
          mkdir TWiLightMenu
          mv release-bootstrap.ver TWiLightMenu
          cd ..
          curl -L https://github.com/TWLBot/Builds/blob/master/nds-bootstrap.7z?raw=true -o nds-bootstrap.7z
          7z x nds-bootstrap.7z
          mv nds-bootstrap/TWiLightMenu/release-bootstrap.ver 7zfile/_nds/TWiLightMenu
          mv nds-bootstrap/TWiLightMenu/nightly-bootstrap.ver 7zfile/_nds/TWiLightMenu
          mv nds-bootstrap/b4ds-release.nds 7zfile/Flashcard\ users/_nds/
          mv nds-bootstrap/b4ds-nightly.nds 7zfile/Flashcard\ users/_nds/
          mv nds-bootstrap/nds-bootstrap-release.nds 7zfile/_nds/
          mv nds-bootstrap/nds-bootstrap-nightly.nds 7zfile/_nds/
          # Permissions are hecked up by Docker
          sudo mkdir 7zfile/DSi\&3DS\ -\ SD\ card\ users/_nds
          mv nds-bootstrap/nds-bootstrap-hb-release.nds 7zfile/DSi\&3DS\ -\ SD\ card\ users/_nds/
          mv nds-bootstrap/nds-bootstrap-hb-nightly.nds 7zfile/DSi\&3DS\ -\ SD\ card\ users/_nds/

          # version.txt
          echo -e "TWiLight Menu++: $(git describe --tags)\nnds-bootstrap: $(jq --raw-output '.tag_name' nds-bootstrap.json)\n\nRocketRobz, ahezard" > 7zfile/version.txt

          cd 7zfile
          7z a TWiLightMenu.7z .
          mkdir -p ${{ github.workspace }}/artifacts
          cp TWiLightMenu.7z ${{ github.workspace }}/artifacts
          echo "============ ${{ github.workspace }}/artifacts ========="
          ls ${{ github.workspace }}/artifacts
      - name: "Publish build to GH Actions"
        uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}/artifacts/*

  # Only run this for non-PR jobs.
  publish_build_twlbot:
    runs-on: ubuntu-latest
    name: "Publish build to TWLBot"
    if: ${{ success() && !startsWith(github.ref, 'refs/pull') }}
    needs: build
    env:
      COMMIT_TAG: ${{ needs.build.outputs.commit_tag }}
      COMMIT_MESSAGE: ${{ needs.build.outputs.commit_message }}
    outputs:
      commit_tag: ${{ steps.commit.outputs.current_date }}
    steps:
      - uses: actions/checkout@v2
      - name: "Make artifacts dir"
        run: mkdir -p ${{ github.workspace }}/artifacts
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: ${{ github.workspace }}/artifacts
      - name: "ls dir"
        run: ls ${{ github.workspace }}/artifacts
      - name: "Commit and push to TWLBot/Builds"
        id: "commit"
        run: |
          # test ls
          ls ${{ github.workspace }}/artifacts
          CURRENT_DATE=$(date +"%Y%m%d-%H%M%S")
          echo "::set-output name=current_date::$CURRENT_DATE"

          git config --global user.email "flamekat54@aol.com"
          git config --global user.name "TWLBot"
          git clone --depth 1 https://${{ secrets.TWLBOT_TOKEN }}@github.com/TWLBot/Builds.git
          cd Builds/
          cp ${{ github.workspace }}/artifacts/* .
          git stage .
          git commit -m "TWiLightMenu | $(COMMIT_TAG)"
          git push origin master
          git tag v$CURRENT_DATE

#       - task: GitHubRelease@0
#         displayName: "Release to TWLBot/Builds"
#         inputs:
#           gitHubConnection: TWLBot
#           repositoryName: TWLBot/Builds
#           action: create
#           target: $(TWLBOT_COMMIT)
#           tagSource: 'manual'
#           tag: v$(CURRENT_DATE)
#           title: TWiLightMenu | $(COMMIT_TAG)
#           releaseNotesSource: input
#           releaseNotes: $(COMMIT_MESSAGE)
#           assets: '$(Build.ArtifactStagingDirectory)/**/*.7z'
#           isPreRelease: true
#           addChangeLog: false

      - name: "Upload to DS-Homebrew/TWiLightMenu release"
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: "https://github.com/${{ github.repository }}/releases/${{ github.ref }}"
          asset_path: $${{ github.workspace }}/artifacts
          asset_name: "*"
          asset_content_type: "*"

  send_webhook_success: 
    runs-on: ubuntu-latest
    needs: publish_build_twlbot
    name: Send Discord Success Webhook
    if: success() && !startsWith(${{ github.ref }}, 'refs/pull')
    env:
      CURRENT_DATE: ${{ needs.publish_build_twlbot.outputs.current_date }}
    steps:
      - name: "Send success webhook"
        run: |
          curl -o send.sh https://raw.githubusercontent.com/DS-Homebrew/discord-webhooks/master/send-azure.sh
          chmod +x send.sh
          ./send.sh success $WEBHOOK_URL

  send_webhook_failure:
    runs-on: ubuntu-latest
    needs: publish_build_twlbot
    name: Send Discord Failure Webhook
    if: failure() && !startsWith(${{ github.ref }}, 'refs/pull')))
    env:
      CURRENT_DATE: ${{ needs.publish_build_twlbot.outputs.current_date }}
    steps:
      - name: "Send failure webhook"
        run: |
          curl -o send.sh https://raw.githubusercontent.com/DS-Homebrew/discord-webhooks/master/send-azure.sh
          chmod +x send.sh
          ./send.sh failure $WEBHOOK_URL
