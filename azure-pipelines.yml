# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

pool:
  vmImage: 'Ubuntu 16.04'
strategy:
  matrix:
    set_env_to_one:
      object: DEVKITPRO=/opt/devkitpro 
    set_env_to_two:
      object: DEVKITARM=/opt/devkitpro/devkitARM
    set_env_to_three:
      object: docker

steps:
- script: |
    sudo dpkg -i pacman.deb
    sudo dkp-pacman -Sy
    sudo dkp-pacman -S devkitARM general-tools dstools ndstool libnds libfat-nds grit mmutil --noconfirm
    export DEVKITPRO=/opt/devkitpro
    export DEVKITARM=${DEVKITPRO}/devkitARM
  displayName: 'Install Stuffs'

  export COMMIT_TAG="$(git log --format=%h -1)"
    export COMMIT_MESSAGE="$(git log --pretty=format:"%an - %s" -1)"
    docker run --rm -t -i -v "$BUILD_SOURCESDIRECTORY:/data" twilightmenu make package
    mv 7zfile/ TWiLightMenu/
    7z a TWiLightMenu.7z TWiLightMenu/
    # before_deploy: |
    # git_config: local user.name "TWLBot"
    # git clone https://$GITHUB_TOKEN@github.com/TWLBot/Builds.git
    # cd Builds/
    # cp ../TWiLightMenu.7z TWiLightMenu.7z
    # git stage .
    # git commit -m 'TWiLightMenu | $COMMIT_TAG'
    # git api origin master
    # export CURRENT_DATE=$(date +'%Y%m%d-%H%M%S')
    # git tag v$CURRENT_DATE

  # api:
  #   provider: releases
  #   overwrite: true
  #   api_key: $GITHUB_TOKEN
  #   file: TWiLightMenu.7z
  #   skip_cleanup: true
  #   repo: TWLBot/Builds
  #   prerelease: true
  #   name: TWiLightMenu | $COMMIT_TAG
  #   body: $COMMIT_MESSAGE