trigger:
  branches:
    include: ['*']
  tags:
    include: ['*']

name:  $[format('{0:yyyyMMdd\-HHmmss}', pipeline.startTime)]

variables:
  REPOSITORY_NAME: $(Build.Repository.Name)

jobs:
  - job: latest_build
    displayName: "Build with latest devkitARM"
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:
    - script: |
        curl -L https://github.com/devkitPro/pacman/releases/download/devkitpro-pacman-1.0.1/devkitpro-pacman.deb -o pacman.deb
        sudo apt update
        # Install haveged to ensure enough entropy
        sudo apt install p7zip-full jq haveged
        sudo dpkg -i pacman.deb

        sudo dkp-pacman -Sy
        sudo dkp-pacman -S nds-dev --noconfirm
      displayName: 'Installing devkitPro and 7zip'

    - script: |
        export DEVKITPRO="/opt/devkitpro"
        export DEVKITARM="/opt/devkitpro/devkitARM"
        # export TWLNOPATCHSRLHEADER=1
        sudo cp libmm7.a /opt/devkitpro/libnds/lib/libmm7.a
        make package
      displayName: 'Build TWiLight Menu++ with latest devkitARM'

    - script: |
        cd booter/
        chmod +x make_cia
        ./make_cia --srl="booter.nds" --id_0=$(git rev-parse --short=7 HEAD) --tikID=$(git rev-parse --short=16 HEAD)
        mkdir -p "../7zfile/3DS - CFW users/"
        cp "booter.cia" "../7zfile/3DS - CFW users/TWiLight Menu.cia"

        cd ../rungame/
        chmod +x make_cia
        ./make_cia --srl="rungame.nds" --id_0=$(git rev-parse --short=7 HEAD) --tikID=$(git rev-parse --short=16 HEAD)
        cp "rungame.cia" "../7zfile/3DS - CFW users/TWiLight Menu - Game booter.cia"

        echo '##vso[task.setvariable variable=COMMIT_TAG;isOutput=true]'$(git log --format=%h -1)
        echo '##vso[task.setvariable variable=COMMIT_MESSAGE;isOutput=true]'$(git log --pretty=format:"%an - %s" -1)
      name: makeCias
      displayName: 'Make booter and TWiLightMenu CIAs'

    - script: |
        rm -r 7zfile/_nds/TWiLightMenu/*menu/
        # Clean .gitkeep files
        rm -rf 7zfile/*/.gitkeep
        rm -rf 7zfile/*/*/.gitkeep

        mv 7zfile/ TWiLightMenu/
        7z a TWiLightMenu.7z TWiLightMenu/
        rm -r TWiLightMenu/_nds/TWiLightMenu/widescreen/
        rm -r TWiLightMenu/_nds/TWiLightMenu/apfix/
        7z a TWiLightMenu-Lite.7z TWiLightMenu/
        cp TWiLightMenu.7z $(Build.ArtifactStagingDirectory)/TWiLightMenu.7z
        cp TWiLightMenu-Lite.7z $(Build.ArtifactStagingDirectory)/TWiLightMenu-Lite.7z
      condition: not(startsWith(variables['Build.SourceBranchName'], 'v'))
      displayName: 'Pack 7z Package for nightly'

    - script: |
        mkdir 7zfile/_nds/TWiLightMenu/boxart/
        mkdir 7zfile/_nds/TWiLightMenu/gamesettings/

        # Clean .gitkeep files
        rm -rf 7zfile/*/.gitkeep
        rm -rf 7zfile/*/*/.gitkeep

        # nds-bootstrap
        mkdir nds-bootstrap
        cd nds-bootstrap
        curl -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/ahezard/nds-bootstrap/releases/latest -o nds-bootstrap.json
        curl -L $(jq --raw-output '.assets[0].browser_download_url' nds-bootstrap.json) -o nds-bootstrap.7z
        7z x nds-bootstrap.7z
        mv nds-bootstrap.* ..
        mkdir TWiLightMenu
        mv release-bootstrap.ver TWiLightMenu
        cd ..
        curl -L https://github.com/TWLBot/Builds/blob/master/nds-bootstrap.7z?raw=true -o nds-bootstrap.7z
        7z x nds-bootstrap.7z
        mv nds-bootstrap/TWiLightMenu/release-bootstrap.ver 7zfile/_nds/TWiLightMenu
        mv nds-bootstrap/TWiLightMenu/nightly-bootstrap.ver 7zfile/_nds/TWiLightMenu
        mv nds-bootstrap/b4ds-release.nds 7zfile/Flashcard\ users/_nds/
        mv nds-bootstrap/b4ds-nightly.nds 7zfile/Flashcard\ users/_nds/
        mv nds-bootstrap/nds-bootstrap-release.nds 7zfile/_nds/
        mv nds-bootstrap/nds-bootstrap-nightly.nds 7zfile/_nds/
        mv nds-bootstrap/nds-bootstrap-hb-release.nds 7zfile/DSi\&3DS\ -\ SD\ card\ users/_nds/
        mv nds-bootstrap/nds-bootstrap-hb-nightly.nds 7zfile/DSi\&3DS\ -\ SD\ card\ users/_nds/

        # version.txt
        echo -e "TWiLight Menu++: $(git describe --tags)\nnds-bootstrap: $(jq --raw-output '.tag_name' nds-bootstrap.json)\n\nRocketRobz, ahezard" > 7zfile/version.txt

        cd 7zfile
        7z a TWiLightMenu.7z .
        cp TWiLightMenu.7z $(Build.ArtifactStagingDirectory)/TWiLightMenu.7z
      condition: startsWith(variables['Build.SourceBranchName'], 'v')
      displayName: 'Pack 7z Package for release'

    - task: PublishBuildArtifacts@1
      displayName: "Publish build to Azure"
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'build-devkitARM-latest'

  - job: docker_build
    pool:
      vmImage: 'Ubuntu-16.04'
    displayName: "Build with Docker using forked libnds and devkitARM r50"
    steps:
      - script: |
          sudo apt update
          sudo apt install p7zip-full
        displayName: "Install 7zip"
      - script: |
          docker build -t twilightmenu --label twilightmenu ./docker
          docker ps -a
        displayName: "Build Docker image"
      - script: |
          docker run --rm -i -v "$(Build.SourcesDirectory):/data" twilightmenu make package
        displayName: "Build TWiLightMenu++ with Docker using forked libnds and devkitARM r50"

      - script: |
          cd booter/
          chmod +x make_cia
          ./make_cia --srl="booter.nds" --id_0=$(git rev-parse --short=7 HEAD) --tikID=$(git rev-parse --short=16 HEAD)
          mkdir -p "../7zfile/3DS - CFW users/"
          cp "booter.cia" "../7zfile/3DS - CFW users/TWiLight Menu.cia"
          cd ../rungame/
          chmod +x make_cia
          ./make_cia --srl="rungame.nds" --id_0=$(git rev-parse --short=7 HEAD) --tikID=$(git rev-parse --short=16 HEAD)
          cp "rungame.cia" "../7zfile/3DS - CFW users/TWiLight Menu - Game booter.cia"
        displayName: 'Make booter and TWiLightMenu CIAs'

      - script: |
          mv 7zfile/ TWiLightMenu/
          7z a TWiLightMenu.7z TWiLightMenu/
          cp TWiLightMenu.7z $(Build.ArtifactStagingDirectory)/TWiLightMenu_docker.7z
        condition: not(startsWith(variables['Build.SourceBranchName'], 'v'))
        displayName: 'Pack 7z Package'
      - task: PublishBuildArtifacts@1
        displayName: "Publish build to Azure"
        inputs:
          pathtoPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'build-devkitARM-Docker'
